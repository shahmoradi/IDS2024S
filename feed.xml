<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">



<title type="text">DATA 1301 - Spring 2024 - MW 16:00-17:20 - PKH 103 / Microsoft Teams Virtual Room</title>
<generator uri="https://github.com/mojombo/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http:/IDS2024S/feed.xml" />
<link rel="alternate" type="text/html" href="http:/IDS2024S/" />
<updated>2024-03-23T21:18:08-05:00</updated>
<id>http:/IDS2024S/</id>
<author>
  <name>Amir Shahmoradi</name>
  <uri>http:/IDS2024S/</uri>
  <email>shahmoradi@utexas.edu</email>
</author>


<entry>
  <title type="html"><![CDATA[Homework 3: Logic and Probability Theory]]></title>
  <link rel="alternate" type="text/html" href="http:/IDS2024S/homework/3-logic"/>
  <id>http:/IDS2024S/homework/3-logic</id>
  <published>2024-10-20T00:00:00-05:00</published>
  <updated>2024-10-20T00:00:00-05:00</updated>
  <author>
    <name>Amir Shahmoradi</name>
    <uri>http:/IDS2024S</uri>
    <email>shahmoradi@utexas.edu</email>
  </author>
  
  <content type="html">
  
    
&lt;p&gt;♣ &lt;strong&gt;Due Date: Wednesday March 27, 2024 at 4 PM&lt;/strong&gt;. This homework aims at giving you some experience with logical thinking and algebra.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Name the three pillars of Science.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Name and briefly describe three different applications of Computational and Data Sciences.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.cdslab.org/recipes/programming/logic-two-types-of-scientific-reasoning/logic/logic-two-types-of-scientific-reasoning&quot; target=&quot;_blank&quot;&gt;Name the two types of scientific reasoning&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Provide an example that shows logical implication does not necessarily imply physical causation.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.cdslab.org/recipes/programming/logic-policeman-jewelry-burglar/logic/logic-policeman-jewelry-burglar&quot; target=&quot;_blank&quot;&gt;Policeman, jewelry, and burglar&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.cdslab.org/recipes/programming/logic-implication/logic/logic-implication&quot; target=&quot;_blank&quot;&gt;Logical Implication&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.cdslab.org/recipes/programming/logic-product-denial/logic/logic-product-denial&quot; target=&quot;_blank&quot;&gt;Logical product denial&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.cdslab.org/recipes/programming/logic-functions-1d/logic-functions-1d&quot; target=&quot;_blank&quot;&gt;Logic functions with 1 input&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.cdslab.org/recipes/programming/logic-functions-2d/logic-functions-2d&quot; target=&quot;_blank&quot;&gt;Logic functions with 2 input&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.cdslab.org/recipes/programming/logic-functions-operations/logic-functions-operations&quot; target=&quot;_blank&quot;&gt;Logic functions in terms of logic functions&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.cdslab.org/recipes/programming/logic-fundamental-operations/logic-fundamental-operations&quot; target=&quot;_blank&quot;&gt;The fundamental logical operators&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Consider the following series of questions:&lt;br /&gt;
a.  What is the tiniest unit of information?&lt;br /&gt;
    &lt;strong&gt;Hint&lt;/strong&gt;: This unit also represents the tiniest bit of information in computers.&lt;br /&gt;
b.  Why does this amount of information represent the tiniest information unit?&lt;br /&gt;
    &lt;strong&gt;Hint&lt;/strong&gt;: Use inductive logic with examples to explain your reasoning.&lt;br /&gt;
    Imagine yourself as a single dot in empty space in a universe devoid of anything else.&lt;br /&gt;
    Would you be able to tell your coordinates in the universe? &lt;br /&gt;
    or whether you are moving? or at what constant speed?&lt;br /&gt;
    Why?  What extra piece of information do you need to answer the above questions?&lt;br /&gt;
c.  Let’s assign a box to this tiniest representable amount of information.&lt;br /&gt;
    Obviously, we cannot represent much information with it. 
    So, our remedy is to put multiple of these boxes to represent information about something.    &lt;br /&gt;
    1.  How many different things can we assign to (or represent with) a collection of 1 such boxes?&lt;br /&gt;
    2.  How many different things can we assign to (or represent with) a collection of 2 such boxes?&lt;br /&gt;
    3.  How many different things can we assign to (or represent with) a collection of 3 such boxes?&lt;br /&gt;
    &lt;strong&gt;Hint&lt;/strong&gt;: Draw binary trees as we described in class to justify your answers.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;


  
  &lt;p&gt;&lt;a href=&quot;http:/IDS2024S/homework/3-logic&quot;&gt;Homework 3: Logic and Probability Theory&lt;/a&gt; was originally published by Amir Shahmoradi at &lt;a href=&quot;http:/IDS2024S&quot;&gt;DATA 1301 - Spring 2024 - MW 16:00-17:20 - PKH 103 / Microsoft Teams Virtual Room&lt;/a&gt; on October 20, 2024.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Lecture 3: Logic and Probability Theory]]></title>
  <link rel="alternate" type="text/html" href="http:/IDS2024S/lecture/3-logic.probability"/>
  <id>http:/IDS2024S/lecture/3-logic.probability</id>
  <published>2024-03-04T00:00:00-06:00</published>
  <updated>0000-00-00T00:00:00-00:00</updated>
  
  <author>
    <name>Amir Shahmoradi</name>
    <uri>http:/IDS2024S</uri>
    <email>shahmoradi@utexas.edu</email>
  </author>
  
  <content type="html">
  
    &lt;p&gt;This lecture aims at providing a brief overview of Logic and Probability Theory, as well as Statistics.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;3.data.science.history.logic.pdf?dl=0&quot; target=&quot;_blank&quot;&gt;Logic and Probability Theory&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  
  &lt;p&gt;&lt;a href=&quot;http:/IDS2024S/lecture/3-logic.probability&quot;&gt;Lecture 3: Logic and Probability Theory&lt;/a&gt; was originally published by Amir Shahmoradi at &lt;a href=&quot;http:/IDS2024S&quot;&gt;DATA 1301 - Spring 2024 - MW 16:00-17:20 - PKH 103 / Microsoft Teams Virtual Room&lt;/a&gt; on March 04, 2024.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Quiz 2: Programming History]]></title>
  <link rel="alternate" type="text/html" href="http:/IDS2024S/quiz/2-prog-hist"/>
  <id>http:/IDS2024S/quiz/2-prog-hist</id>
  <published>2024-02-28T00:00:00-06:00</published>
  <updated>2024-02-28T00:00:00-06:00</updated>
  <author>
    <name>Amir Shahmoradi</name>
    <uri>http:/IDS2024S</uri>
    <email>shahmoradi@utexas.edu</email>
  </author>
  
  <content type="html">
  
    &lt;!--
This is the solution to [Quiz 1: Problems - Version control system](1-problems-version-control-system.html){:target=&quot;_blank&quot;}.

The following figure illustrates the grade distribution for this quiz.
&lt;figure&gt;
    &lt;img src=&quot;http:/IDS2024S/quiz/gradeDist/gradeHistQuiz1.png&quot; width=&quot;700&quot;&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;
        Maximum possible points is 1.
    &lt;/figcaption&gt;
&lt;/figure&gt;
--&gt;

&lt;p&gt;This quiz aims at testing your basic knowledge of programming history.&lt;br /&gt;
Don’t forget to push your answers to your remote repository by the end of quiz time.&lt;br /&gt;
Push all your answers to &lt;strong&gt;quiz/2/&lt;/strong&gt; folder in your Github project.&lt;/p&gt;

&lt;hr /&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;What is the fastest component of a computer memory?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
Register&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Why is modern computer memory comprised of a multilevel (hierarchical) structure?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
Because the original memory device were on par with CPUs in speed.&lt;br /&gt;
The hardware developers came up with the idea of a multilevel structure for memory.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is the slowest kind of computer storage device?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
External or Hard drive.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Name the hierarchy of the memory of modern computers, from the smallest to the largest memory size.&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
Register, L1, L2, L3, RAM, External or Hard drive.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is smallest unit of information in computers? (Hint: Recall our computer programming lecture)&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
bit.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Why have humans chosen the binary numbers (0 and 1) to represent data in computers?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
Because binary information is readily representable by electric currents.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is the typical speed of contemporary computer memory registers?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
On the order of nanoseconds.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What decade was the first digital computer built?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
1940’&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What decade was the first general-purpose digital computer built?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
1940’&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is a fixed program computer?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
Early models of computers that could only perform certain tasks.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Name an example of modern-day fixed program computer.&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
Calculators.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is the difference between declarative and imperative knowledge?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
Declarative knowledge involves statements of fact. Imperative knowledge is about how to accomplish something, or basically, is a recipe on how to do something, known as algorithm in scientific terminology.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Classify the following statements as imperative or declarative knowledge.&lt;br /&gt;
a.  The letter B is the second letter in the English alphabet.&lt;br /&gt;
b.  Overcast sky conditions are more likely to cause rain.&lt;br /&gt;
c.  Submit your answer to this question in subfolder &lt;code&gt;2&lt;/code&gt; of &lt;code&gt;quiz&lt;/code&gt; folder of your GitHub project.&lt;br /&gt;
e.  Once done with this quiz, do not forget to commit your responses to your repository.&lt;br /&gt;
d.  You must answer all questions in this quiz to get a full grade.&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
Declarative knowledge involves statements of fact. Imperative knowledge is about how to accomplish something, or basically, is a recipe on how to do something, known as algorithm in scientific terminology.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What class of human knowledge algorithms belong to?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
Imperative knowledge.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is the name of the first digital computer?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
ENIAC.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Name a computer programming language whose evolution and popularity is tightly coupled with the field of Bioinformatics.&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
Python.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Name a computer programming language whose evolution and popularity is tightly coupled with the field of Numerical Computing, Atmospheric Science, Plasma Sciences, and Aerospace Engineering, among others.&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
Fortran.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Name the five major components of a modern digital computer.&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
input device, CPU, main memory, external storage, output device.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Name an example of fixed-program computer.&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
Calculators.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Order the following languages chronologically according to their birth date. (Hint: Use the diagrams from our lecture notes)&lt;br /&gt;
Java, COBOL, C++, Python, Fortran, B&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
Fortran, COBOL, B, C++, Java, Python&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;(A) What is the closest human-readable programming language to machine code (i.e., binary numbers)?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
Assembly&lt;/p&gt;

    &lt;p&gt;(B) Does it need interpretation in order to become machine-comprehensible?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
Yes. An &lt;em&gt;Assembler&lt;/em&gt; interprets the program for the machine.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;(A) Name the oldest high-level programming language that is still in active daily use.&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
Fortran&lt;/p&gt;

    &lt;p&gt;(B) Approximately how many decades is it old? ($\pm15$ years is acceptable answer. the decade Tt was created is also an acceptable answer.)&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
in 1950s&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;(A) Name a second-generation programming language.&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
Assembly&lt;/p&gt;

    &lt;p&gt;(B) Which language-generation are Fortran, C, C++, MATLAB, Python, R?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
third, third, third, fourth, fourth, fourth&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In what decades C, C++, MATLAB, and Python were created, respectively? (Hint: Use the diagrams from our lecture notes)&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
1970s, 1980s, 1980s, 1990s, 1990s&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Name an ancestor programming language of C (Hint: Use the diagrams from our lecture notes).&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
B&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Name a programming language ancestor of C++ (Hint: Use the diagrams from our lecture notes).&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
C, Simula&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Name a programming language ancestor of MATLAB and a programming language ancestor of Python (Hint: Use the diagrams from our lecture notes).&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
Fortran/C&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How do you define logarithm? Explain with a simple example just as we did in class.&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
The logarithm in bae of 10, the exponent that if the number 10 is raised to, then it yields the original number. For example, log10(100) = 2.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Consider the following summation:&lt;br /&gt;
\(S = 3 + 6 + 9 + \ldots + 93 + 96 + 99 ~.\)&lt;br /&gt;
What is the value of S? Explain your novel strategy to get your answer.&lt;br /&gt;
(&lt;strong&gt;Hint&lt;/strong&gt;: There are $33$ numbers in the summation.)&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;  &lt;br /&gt;
\(\begin{eqnarray*}
        S 
        &amp;amp;=&amp;amp; 3 + 6 + 9 + \ldots + 93 + 96 + 99 ~, \\
        &amp;amp;=&amp;amp; 3 \times (1 + 2 + 3 + \ldots + 33) ~, \\
        &amp;amp;=&amp;amp; 3 \times frac{34 \times 33}{2} ~, \\
        &amp;amp;=&amp;amp; 1683 ~.\\
    \end{eqnarray*}\)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Extra Credit&lt;/strong&gt;. Which memory device is longer lasting: magnetic tapes or HDD (Hard-Disk Drives)? 
How many years approximately each one last (a rough reasonable estimate is good enough)?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
Magnetic last decades, HHD last around 5-10 years.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Extra Credit&lt;/strong&gt;. Can you name a fixed-program computer that existed for centuries before the invention of the first digital computer?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
Yes. Abacus.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Extra Credit&lt;/strong&gt;. Consider the following multiplication:&lt;br /&gt;
\(S = 10^1 \times 10^2 \times 10^3 \times \ldots \times 10^{100} ~.\)
What is the value of S? Explain your novel strategy to get your answer.&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
\(\begin{eqnarray*}
        \log_{10}(S) &amp;amp;=&amp;amp; \log_{10}(10^1 \times 10^2 \times 10^3 \times \ldots \times 10^{100}) ~, \\
                     &amp;amp;=&amp;amp; 1 + 2 + 3 + \ldots + 100 ~, \\
                     &amp;amp;=&amp;amp; (101 \times 100) / 2 ~, \\
                     &amp;amp;=&amp;amp; 5050 ~.\\
    \end{eqnarray*}
    \Rightarrow S = 10^{5050} ~.\)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;


  
  &lt;p&gt;&lt;a href=&quot;http:/IDS2024S/quiz/2-prog-hist&quot;&gt;Quiz 2: Programming History&lt;/a&gt; was originally published by Amir Shahmoradi at &lt;a href=&quot;http:/IDS2024S&quot;&gt;DATA 1301 - Spring 2024 - MW 16:00-17:20 - PKH 103 / Microsoft Teams Virtual Room&lt;/a&gt; on February 28, 2024.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Lecture 2: Scientific Computing - A Brief History and the State of the Art]]></title>
  <link rel="alternate" type="text/html" href="http:/IDS2024S/lecture/2-programming-history"/>
  <id>http:/IDS2024S/lecture/2-programming-history</id>
  <published>2024-02-22T00:00:00-06:00</published>
  <updated>0000-00-00T00:00:00-00:00</updated>
  
  <author>
    <name>Amir Shahmoradi</name>
    <uri>http:/IDS2024S</uri>
    <email>shahmoradi@utexas.edu</email>
  </author>
  
  <content type="html">
  
    &lt;p&gt;This lecture aims at providing a brief history of the development of computers and computer programming 
languages and their mutual interaction with rapid developments in natural sciences in the 20th century.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cdslab.org/python/notes/preliminary-foundations/programming-history/programming-history.html&quot; target=&quot;_blank&quot;&gt;programming history&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cdslab.org/python/notes/preliminary-foundations/computer-hardware/computer-hardware.html&quot; target=&quot;_blank&quot;&gt;Computer hardware&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cdslab.org/python/notes/preliminary-foundations/computer-programming/computer-programming.html&quot; target=&quot;_blank&quot;&gt;Computer programs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  
  &lt;p&gt;&lt;a href=&quot;http:/IDS2024S/lecture/2-programming-history&quot;&gt;Lecture 2: Scientific Computing - A Brief History and the State of the Art&lt;/a&gt; was originally published by Amir Shahmoradi at &lt;a href=&quot;http:/IDS2024S&quot;&gt;DATA 1301 - Spring 2024 - MW 16:00-17:20 - PKH 103 / Microsoft Teams Virtual Room&lt;/a&gt; on February 22, 2024.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Homework 2: Programming History]]></title>
  <link rel="alternate" type="text/html" href="http:/IDS2024S/homework/2-programming-history"/>
  <id>http:/IDS2024S/homework/2-programming-history</id>
  <published>2024-02-19T00:00:00-06:00</published>
  <updated>2024-02-19T00:00:00-06:00</updated>
  <author>
    <name>Amir Shahmoradi</name>
    <uri>http:/IDS2024S</uri>
    <email>shahmoradi@utexas.edu</email>
  </author>
  
  <content type="html">
  
    
&lt;p&gt;♣ &lt;strong&gt;Due Date: Wednesday February 27, 2024 4:00 PM&lt;/strong&gt;.&lt;br /&gt;
This homework aims at giving you some experience with computer hardware and software.&lt;br /&gt;
Please write your answers in a &lt;code&gt;README.md&lt;/code&gt; file and push them all to &lt;code&gt;hw/2/&lt;/code&gt; folder of your repository on GitHub.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Consider &lt;a href=&quot;./2/progLangChartPuzzle.pdf&quot; target=&quot;_blank&quot;&gt;this programming history chart&lt;/a&gt;, in which several programming language nodes are missing.&lt;br /&gt;
These languages are the following: lisp, basic, Algol 58, C, FORTRAN, Fortran 90, Python, C++, C#, Java, JavaScript, sh.
    &lt;ol&gt;
      &lt;li&gt;Download the above PDF, add these languages to the right node in this fillable PDF file, save the file and submit it along with your answers to other questions.&lt;/li&gt;
      &lt;li&gt;Sort the above languages chronologically and write them here.&lt;/li&gt;
      &lt;li&gt;Write down the decade during which these languages were developed.&lt;/li&gt;
    &lt;/ol&gt;

    &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What does ENIAC stand for?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Why is everything represented by integers in computers?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is the name of the fastest part of the computer memory?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is the slowest storage device in computers (that is typically integrated with computers)?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is the smallest unit of information in computer science?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;(A) What is the closest programming language to machine code (i.e., binary code)?&lt;/p&gt;

    &lt;p&gt;(B) Does it need interpretation in order to become machine-comprehensible?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;(A) Name the oldest high-level programming language that is still in active daily use.&lt;/p&gt;

    &lt;p&gt;(B) Approximately how many decades is it old? ($\pm15$ years is acceptable answer. the decade it was created is also an acceptable answer)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;(A) Name a second-generation programming language.&lt;/p&gt;

    &lt;p&gt;(B) Which language-generation are Fortran, C, C++, MATLAB, Python, R?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In what decades C, C++, and MATLAB/Python were created, respectively?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Name an ancestor programming language of C.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Name a programming language ancestor of C++.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Name a programming language ancestor of MATLAB and a programming language ancestor of Python.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is fastest part of the memory in the memory hierarchy of modern computers?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is typically the smallest memory unit in the memory hierarchy of modern computers?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How much faster is the access to the register memory compared to RAM in modern computers?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How much faster is the access to the RAM compared to typical SSD hard drives in modern computers?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How much faster is the access to the RAM compared to typical HDD hard drives in modern computers?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What are the primary roles of transistors in computers?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We know that more transistors mean faster computers.&lt;br /&gt;
Then, why cannot we add more transistors to computers to make them faster?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What are the three tasks accomplished within a CPU cycle?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Can a powerful computer with more CPU cycles be slower than a computer with less CPU cycles? Why or How?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is the bottleneck of speed in modern computers? CPU clocks or memory access? Why?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is the difference between the Dennard Scaling, MOSFET scaling, and Moore’s law?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Consider the following chessboard.&lt;br /&gt;
Suppose I ask you to put a single rice grain in the first square.&lt;br /&gt;
Then I ask you to put incrementally one more grain in each new square than the previous one:&lt;br /&gt;
1, 2, 3, 4, 5, …
    &lt;ol&gt;
      &lt;li&gt;How many grains would you need to put in the last (64th) square?&lt;/li&gt;
      &lt;li&gt;How many grains overall would you need to fill all chessboard squares incrementally as described above?&lt;/li&gt;
      &lt;li&gt;A pound of rice is roughly 7000 grains. How many pounds of rice would you need for this task?&lt;br /&gt;
&lt;img src=&quot;./2/arithmetic.png&quot; alt=&quot;chessboard&quot; /&gt;&lt;/li&gt;
    &lt;/ol&gt;

    &lt;p&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Consider the following chessboard.&lt;br /&gt;
Suppose I ask you to put a single rice grain in the first square.&lt;br /&gt;
Then I ask you to put in each subsequent square twice more than the previous square grains:&lt;br /&gt;
1, 2, 4, 8, 16, …
    &lt;ol&gt;
      &lt;li&gt;How many grains would you need to put in the last (64th) square?&lt;/li&gt;
      &lt;li&gt;How many grains would you need to fill the last chessboard square geometrically as described above?&lt;/li&gt;
      &lt;li&gt;A pound of rice is roughly 7000 grains. How many pounds of rice would you need for this task?&lt;/li&gt;
      &lt;li&gt;The current annual world production of rice is roughly $2\times10^{12} = 2,000,000,000,000$ lbs.&lt;br /&gt;
How many years will it take to produce the required amount of rice grains to place on this chessboard in this fashion?&lt;br /&gt;
&lt;img src=&quot;./2/geometric.jpg&quot; alt=&quot;chessboard&quot; /&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What are the three fundamental components of a Turing-complete language?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Extra credit:&lt;/strong&gt; How would you distinguish exponential behavior vs. power-law behavior (function) in a 2-dimensional plot?&lt;br /&gt;
&lt;strong&gt;Hint&lt;/strong&gt;: Recall our discussion of the ENAIC project and the relative frequency of keywords such as “computer” in our programming.&lt;/li&gt;
&lt;/ol&gt;


  
  &lt;p&gt;&lt;a href=&quot;http:/IDS2024S/homework/2-programming-history&quot;&gt;Homework 2: Programming History&lt;/a&gt; was originally published by Amir Shahmoradi at &lt;a href=&quot;http:/IDS2024S&quot;&gt;DATA 1301 - Spring 2024 - MW 16:00-17:20 - PKH 103 / Microsoft Teams Virtual Room&lt;/a&gt; on February 19, 2024.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Quiz 1: Version Control Systems]]></title>
  <link rel="alternate" type="text/html" href="http:/IDS2024S/quiz/1-intro-vcs"/>
  <id>http:/IDS2024S/quiz/1-intro-vcs</id>
  <published>2024-02-12T00:00:00-06:00</published>
  <updated>2024-02-12T00:00:00-06:00</updated>
  <author>
    <name>Amir Shahmoradi</name>
    <uri>http:/IDS2024S</uri>
    <email>shahmoradi@utexas.edu</email>
  </author>
  
  <content type="html">
  
    &lt;!--
This is the solution to [Quiz 1: Problems - Version control system](1-problems-version-control-system.html){:target=&quot;_blank&quot;}.  

The following figure illustrates the grade distribution for this quiz.  
&lt;figure&gt;
    &lt;img src=&quot;http:/IDS2024S/quiz/gradeDist/gradeHistQuiz1.png&quot; width=&quot;700&quot;&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;
        Maximum possible points is 1.
    &lt;/figcaption&gt;
&lt;/figure&gt;
--&gt;

&lt;p&gt;This quiz aims at testing your basic knowledge of Version Control System and some topics discussed in the history of Data Science. 
Don’t forget to push your answers to your remote repository by the end of quiz time. 
Push all your answers to &lt;strong&gt;quiz/1/&lt;/strong&gt; folder in your Github project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This quiz is open-lecture&lt;/strong&gt;, however, you are &lt;strong&gt;not&lt;/strong&gt; allowed to consult other resources or people.&lt;br /&gt;
Despite the length of the quiz, many of the answers are brief, sometimes a simple &lt;code&gt;YES&lt;/code&gt; or &lt;code&gt;NO&lt;/code&gt;, 
so do not elaborate excessively on a particular question. Instead, try to answer all question briefly and correctly.&lt;/p&gt;

&lt;p&gt;You have the entire class time to submit your answers for this quiz.&lt;br /&gt;
Ensure you stage and commit all your answers to your GitHub account in the right location for quiz 1.&lt;br /&gt;
GitHub automatically stamps all your submissions with time up to seconds.&lt;br /&gt;
Late submissions as evidenced by the GitHub stamps for the commit time will not count.&lt;br /&gt;
So, ensure to submit your work before the official end of class time.&lt;/p&gt;

&lt;h2&gt;&lt;br /&gt;&lt;/h2&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a &lt;code&gt;README.md&lt;/code&gt; within a subfolder named &lt;code&gt;1&lt;/code&gt; within the &lt;code&gt;quiz&lt;/code&gt; folder that you have already created in your GitHub project as part of homework 1. 
This &lt;code&gt;README.md&lt;/code&gt; file will contain the rest of your answers to the following questions.&lt;br /&gt;
Once you write your answers to all questions in this file, &lt;strong&gt;commit&lt;/strong&gt; this file to your GitHub project before quiz ends at the end of the class time.&lt;br /&gt;
Tips for quiz submission:&lt;br /&gt;
You can take two different approaches to creating the README.md file for this quiz that will reside in the &lt;code&gt;quiz/1/&lt;/code&gt; of your &lt;code&gt;IDS2024S&lt;/code&gt; GitHub project.
    &lt;ul&gt;
      &lt;li&gt;You can create the &lt;code&gt;quiz/1/README.md&lt;/code&gt; file on your GitHub project page account in your browser.&lt;br /&gt;
This is the recommended approach if you still do not feel comfortable using the Git Bash command line.&lt;br /&gt;
&lt;strong&gt;WARNING&lt;/strong&gt;&lt;br /&gt;
In this case, just like how you created your &lt;code&gt;README.md&lt;/code&gt; file for the front page of your GitHub project,
make sure to &lt;strong&gt;commit&lt;/strong&gt; all your changes to your quiz README file &lt;strong&gt;before&lt;/strong&gt; leaving the page.&lt;br /&gt;
If you fail to commit the quiz README file (containing your quiz answers) before leaving the edit page, 
you will lose all your answers and I will have nothing to grade.&lt;br /&gt;
If you are in doubt, get help from Nicholas or me.&lt;/li&gt;
      &lt;li&gt;You can make the &lt;code&gt;./quiz/1/README.md&lt;/code&gt; file in the clone of your &lt;code&gt;IDS2024S&lt;/code&gt; project that we created in class on Wednesday.&lt;br /&gt;
Then add all your answers in the file, then stage and commit the file to your project on the Git Bash command line,
then push the changes to your project on GitHub just like how we did it in class on Wednesday.&lt;br /&gt;
This is the recommended approach if you already feel comfortable using the Git Bash command line.&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
Watch the recordings of our lectures for instructions on how to do this.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Recall from our lectures that we typically name our read-me files &lt;code&gt;README.md&lt;/code&gt; on GitHub.&lt;br /&gt;
What does &lt;code&gt;.md&lt;/code&gt; stand for? Why we do prefer to use &lt;code&gt;.md&lt;/code&gt; extension for README files on GitHub?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
The abbreviation &lt;code&gt;md&lt;/code&gt; stands for the &lt;strong&gt;Markdown&lt;/strong&gt; language.&lt;br /&gt;
GitHub attempts to process any file with the suffix &lt;code&gt;md&lt;/code&gt; as a Markdown-enabled text, and tries to display the rich-text resulting from the processing of the contents of the file instead of the plain text from the file.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Does the &lt;code&gt;git&lt;/code&gt; software index and track &lt;strong&gt;empty&lt;/strong&gt; folders in your project?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
NO.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Does every Git project have a &lt;code&gt;.git&lt;/code&gt; folder?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
YES.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is the purpose of the &lt;code&gt;.git&lt;/code&gt; folder in Git projects?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
The &lt;code&gt;.git&lt;/code&gt; folder contains all information about a given Git project.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What does the Linux Bash command &lt;code&gt;cd&lt;/code&gt; do? (&lt;strong&gt;Hint:&lt;/strong&gt; See the Linux cheatsheet in the lecture notes)&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
It commands the Bash shell to change directory to another specified path.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What does the Linux Bash command &lt;code&gt;ls -a&lt;/code&gt; do?  (&lt;strong&gt;Hint:&lt;/strong&gt; See the Linux cheatsheet in the lecture notes)&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
It lists all files and folders (including hidden files) in the current Bash path.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What does the Linux Bash command &lt;code&gt;pwd&lt;/code&gt; do?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
It displays the path to the current working directory in a Bash environment.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Name and briefly describe the three different areas in a Git project.&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;/p&gt;
    &lt;ol&gt;
      &lt;li&gt;Working directory&lt;/li&gt;
      &lt;li&gt;Staging area&lt;/li&gt;
      &lt;li&gt;Commit area&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is a Version Control System (VCS)? A brief explanation is enough.&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;  &lt;br /&gt;
A software that enables tracking all changes in a project.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Name 6 major benefits of using &lt;em&gt;distributed&lt;/em&gt; VCS as opposed to not using any VCS at all for project indexing and maintenance.&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;  &lt;br /&gt;
See &lt;a href=&quot;https://www.cdslab.org/python/notes/preliminary-foundations/version-control-system/version-control-system.html#motivation&quot;&gt;this page&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Name the three major historical classes of VCS.&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;  &lt;br /&gt;
See &lt;a href=&quot;https://www.cdslab.org/python/notes/preliminary-foundations/version-control-system/version-control-system.html#motivation&quot;&gt;this page&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is Git and how is it different from GitHub?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;  &lt;br /&gt;
See &lt;a href=&quot;https://www.cdslab.org/python/notes/preliminary-foundations/version-control-system/version-control-system.html#motivation&quot;&gt;this page&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What does &lt;code&gt;git status&lt;/code&gt; command do?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;  &lt;br /&gt;
See &lt;a href=&quot;https://www.cdslab.org/python/notes/preliminary-foundations/version-control-system/version-control-system.html#git-add-add-files-to-the-staging-area&quot;&gt;this page&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What does &lt;code&gt;git push --all&lt;/code&gt; command do?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;  &lt;br /&gt;
See &lt;a href=&quot;https://www.cdslab.org/python/notes/preliminary-foundations/version-control-system/version-control-system.html#git-push-push-the-changes-in-local-repository-to-the-remote-repository&quot;&gt;this page&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What does &lt;code&gt;git pull&lt;/code&gt; command do?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;  &lt;br /&gt;
See &lt;a href=&quot;https://www.cdslab.org/python/notes/preliminary-foundations/version-control-system/version-control-system.html#git-pull-pull-the-latest-project-revision-from-the-remote-to-the-local-repository&quot;&gt;this page&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is Markdown? (A brief answer is sufficient)&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;  &lt;br /&gt;
A set of rules for text highlighting.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How do you make a text boldface in Markdown? (&lt;strong&gt;Hint:&lt;/strong&gt; Read the Markdown cheatsheet in the lecture notes)&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;  &lt;br /&gt;
By sandwiching the text with double asterisk like &lt;code&gt;**boldface**&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;How do you make a text italic in Markdown? (&lt;strong&gt;Hint:&lt;/strong&gt; Read the Markdown cheatsheet in the lecture notes)&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;  &lt;br /&gt;
By sandwiching the text with asterisk like &lt;code&gt;*italic*&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is the Git command to initialize an empty git project on your local system?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;  &lt;br /&gt;
&lt;code&gt;git init&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What do &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;..&lt;/code&gt; mean in directory path names (For example, in &lt;code&gt;./README.md&lt;/code&gt; and &lt;code&gt;../README.md&lt;/code&gt;?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
A single dot means the current directory and double-dots means the parent directory.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;The following steps will guide you to create an empty Git project using the terminal (on macOS / Linux) or Git Bash environment (on Windows).&lt;br /&gt;
If you have not set up Git on your system in class before, &lt;a href=&quot;https://www.cdslab.org/recipes/programming/vcs-git-github-setup/vcs-git-github-setup&quot; target=&quot;_blank&quot;&gt;here is your last chance&lt;/a&gt; to do so.
    &lt;ol&gt;
      &lt;li&gt;Open your terminal (on Linux or macOS) or Git Bash (&lt;strong&gt;NOT Windows CMD or PowerShell&lt;/strong&gt;) on Windows.&lt;/li&gt;
      &lt;li&gt;Navigate to your home directory and type the command that shows the path to the current directory on the command line (Hint: Recall the Linux commands to achieve this from our classes or the cheatsheets.)&lt;/li&gt;
      &lt;li&gt;Select the commands that you have types and the commands output from the command line and paste it into your README.md file for this quiz in the section for this question.&lt;br /&gt;
(Hint: You can select text with your mouse, then right click and look for &lt;strong&gt;copy&lt;/strong&gt; option, or alternatively, press &lt;code&gt;ctrl&lt;/code&gt; + &lt;code&gt;insert&lt;/code&gt; keys together to copy the selected text.)&lt;/li&gt;
      &lt;li&gt;Create a new folder named &lt;code&gt;testdir&lt;/code&gt; in your home directory (where you are).&lt;br /&gt;
(Hint: Recall the Linux command for making directories.)&lt;br /&gt;
Copy the command and its output again to the README.md file you have created for the quiz.&lt;/li&gt;
      &lt;li&gt;Change directory to &lt;code&gt;testdir&lt;/code&gt;. (Hint: Recall the command to change directory from the Linux cheatsheet and our class)&lt;/li&gt;
      &lt;li&gt;Is this folder &lt;code&gt;testdir&lt;/code&gt; already a git repository? Why? Can you prove your answer with the command &lt;code&gt;ls -a&lt;/code&gt; (What does this command do?)&lt;/li&gt;
      &lt;li&gt;If your answer to the above is &lt;strong&gt;YES&lt;/strong&gt;, then you can safely skip this part.&lt;br /&gt;
If your answer is &lt;strong&gt;NO&lt;/strong&gt;, then how would you make this folder a Git project? (Hint: What is the right git command to achieve this?)&lt;/li&gt;
      &lt;li&gt;Recall the &lt;code&gt;vim&lt;/code&gt; software from our lectures and classes. What does it do?&lt;br /&gt;
Using &lt;code&gt;vim&lt;/code&gt; create a &lt;code&gt;README.md&lt;/code&gt; file and type &lt;code&gt;This is a README.md file for the test git project of quiz1&lt;/code&gt;.&lt;br /&gt;
How do you save the contents of this file using &lt;code&gt;vim&lt;/code&gt; and quit the &lt;code&gt;vim&lt;/code&gt; environment? (Hint: Again remember our class discussion and lectures)&lt;/li&gt;
      &lt;li&gt;Once you are out of the vim environment, type &lt;code&gt;cat README.md&lt;/code&gt; on the command line and press &lt;code&gt;Enter&lt;/code&gt; key.&lt;br /&gt;
What do you see? Copy and paste this command and its output to as answer to this section of your quiz1 README.md file.&lt;/li&gt;
      &lt;li&gt;How would you check the status of your test Git project that you have created in this folder?&lt;br /&gt;
Paste the git command and its output as your answer to this question in your quiz README.md file.&lt;/li&gt;
      &lt;li&gt;If you see no changes, you can skip this question.&lt;br /&gt;
If you see changes in your git project from the step above, how would you &lt;strong&gt;stage&lt;/strong&gt; and &lt;strong&gt;commit&lt;/strong&gt; those changes to your test project on the command line?&lt;br /&gt;
Type those two (or both in one) commands in the terminal and copy/paste the output to your quiz1 README file.&lt;/li&gt;
      &lt;li&gt;Check the status of your test project one more time on the command line.&lt;br /&gt;
Copy/paste the command and its output to your quiz1 README file.&lt;/li&gt;
      &lt;li&gt;Now type the following command exactly as is in your terminal and press &lt;code&gt;Enter&lt;/code&gt;.
        &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd &amp;amp;&amp;amp; rm -rf ./testdir
&lt;/code&gt;&lt;/pre&gt;
        &lt;p&gt;Explain what you just accomplished with the above command?  What does &lt;code&gt;-rf&lt;/code&gt; do in the above command?&lt;br /&gt;
(Hint: &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; means perform the first command and if successful, then perform the command that follows &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;.)&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;  &lt;br /&gt;
I will explain this in class.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Extra Credit.&lt;/strong&gt; What is the difference between a relative and an absolute file path?&lt;br /&gt;
Which one is more appropriate to use in your GitHub projects? Why?&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;br /&gt;
Relative paths are portable because they do not contain hard-coded information.&lt;br /&gt;
Absolute paths are mostly useful for global addressing such as the world wide web or 
when all addresses are known to reside on a single computer and never moved out of it.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Extra Credit.&lt;/strong&gt; Write down the Git command that lists all Git commands for you (&lt;strong&gt;Hint:&lt;/strong&gt; See the lecture notes)&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;&lt;/p&gt;
    &lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;$ git help -a
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ol&gt;


  
  &lt;p&gt;&lt;a href=&quot;http:/IDS2024S/quiz/1-intro-vcs&quot;&gt;Quiz 1: Version Control Systems&lt;/a&gt; was originally published by Amir Shahmoradi at &lt;a href=&quot;http:/IDS2024S&quot;&gt;DATA 1301 - Spring 2024 - MW 16:00-17:20 - PKH 103 / Microsoft Teams Virtual Room&lt;/a&gt; on February 12, 2024.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Lecture 1: Scientific Computing - A Brief History and the State of the Art]]></title>
  <link rel="alternate" type="text/html" href="http:/IDS2024S/lecture/1-data-science"/>
  <id>http:/IDS2024S/lecture/1-data-science</id>
  <published>2024-01-22T00:00:00-06:00</published>
  <updated>0000-00-00T00:00:00-00:00</updated>
  
  <author>
    <name>Amir Shahmoradi</name>
    <uri>http:/IDS2024S</uri>
    <email>shahmoradi@utexas.edu</email>
  </author>
  
  <content type="html">
  
    &lt;p&gt;This lecture aims at providing a brief history of the development of computers and computer programming 
languages and their mutual interaction with rapid developments in natural sciences in the 20th century.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cdslab.org/python/notes/preliminary-foundations/version-control-system/version-control-system.html&quot; target=&quot;_blank&quot;&gt;Version Control System&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/UTA-DataScience/DATA1301.2021.Fall/raw/main/0.introduction.pdf&quot; target=&quot;_blank&quot;&gt;intro-data-science&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

  
  &lt;p&gt;&lt;a href=&quot;http:/IDS2024S/lecture/1-data-science&quot;&gt;Lecture 1: Scientific Computing - A Brief History and the State of the Art&lt;/a&gt; was originally published by Amir Shahmoradi at &lt;a href=&quot;http:/IDS2024S&quot;&gt;DATA 1301 - Spring 2024 - MW 16:00-17:20 - PKH 103 / Microsoft Teams Virtual Room&lt;/a&gt; on January 22, 2024.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Homework 1: Version Control Using Git and Github]]></title>
  <link rel="alternate" type="text/html" href="http:/IDS2024S/homework/1-vcs"/>
  <id>http:/IDS2024S/homework/1-vcs</id>
  <published>2024-01-22T00:00:00-06:00</published>
  <updated>2024-01-22T00:00:00-06:00</updated>
  <author>
    <name>Amir Shahmoradi</name>
    <uri>http:/IDS2024S</uri>
    <email>shahmoradi@utexas.edu</email>
  </author>
  
  <content type="html">
  
    &lt;p&gt;♣ &lt;strong&gt;Due Date: Monday Feb 12, 2024 4:00 PM&lt;/strong&gt;. This homework aims at giving you some experience on how to work with Git and GitHub.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cdslab.org/recipes/programming/vcs-git-github-setup/vcs-git-github-setup&quot; target=&quot;_blank&quot;&gt;Setting up Git Software and Connecting it to your GitHub Account&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cdslab.org/recipes/programming/vcs-using-git-github/vcs-using-git-github#problem-part-1&quot; target=&quot;_blank&quot;&gt;Version-control using Git and GitHub &lt;strong&gt;ONLY part 1&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Name the three historical types of Version Control Systems.&lt;/li&gt;
  &lt;li&gt;Which one of the three historical types of Version Control Systems is best and why is it the best?&lt;/li&gt;
  &lt;li&gt;Briefly describe what the following git commands do.&lt;br /&gt;
a. &lt;code&gt;git pull&lt;/code&gt;&lt;br /&gt;
b. &lt;code&gt;git status&lt;/code&gt;&lt;br /&gt;
c. &lt;code&gt;git add --all&lt;/code&gt;&lt;br /&gt;
d. &lt;code&gt;git commit -m&quot;latest build&quot;&lt;/code&gt;&lt;br /&gt;
e. &lt;code&gt;git push --all&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;In your repository for this course on GitHub (named &lt;code&gt;IDS2024S&lt;/code&gt;, standing for &lt;strong&gt;Introduction to Data Science 2024 Spring&lt;/strong&gt;), create the following folders,&lt;br /&gt;
a. &lt;code&gt;hw&lt;/code&gt;&lt;br /&gt;
b. &lt;code&gt;quiz&lt;/code&gt;&lt;br /&gt;
c. &lt;code&gt;exam&lt;/code&gt;&lt;br /&gt;
Inside the &lt;code&gt;hw&lt;/code&gt; folder, create another folder named &lt;code&gt;1&lt;/code&gt;. Inside this folder create a &lt;code&gt;README.md&lt;/code&gt; file containing your answers to the above questions.&lt;br /&gt;
&lt;strong&gt;Hint:&lt;/strong&gt; You can either do the above tasks inside the local clone of your repository and &lt;code&gt;push&lt;/code&gt; it to the remote copy of the repository on GitHub or, you can create all of the folders and subfolders and files on the GitHub page of your project.&lt;/li&gt;
  &lt;li&gt;(&lt;strong&gt;Optional, extra point&lt;/strong&gt;)
    &lt;ol&gt;
      &lt;li&gt;Make a website for your GitHub account (we did this in class).&lt;/li&gt;
      &lt;li&gt;Explain the meaning of &lt;code&gt;https&lt;/code&gt; in your website address.&lt;/li&gt;
      &lt;li&gt;Explain the meaning of relative vs. absolute path.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;


  
  &lt;p&gt;&lt;a href=&quot;http:/IDS2024S/homework/1-vcs&quot;&gt;Homework 1: Version Control Using Git and Github&lt;/a&gt; was originally published by Amir Shahmoradi at &lt;a href=&quot;http:/IDS2024S&quot;&gt;DATA 1301 - Spring 2024 - MW 16:00-17:20 - PKH 103 / Microsoft Teams Virtual Room&lt;/a&gt; on January 22, 2024.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Announcement 1: Assessing your programming knowledge and interests]]></title>
  <link rel="alternate" type="text/html" href="http:/IDS2024S/announcement/1-assessing-your-programming-knowledge-and-interests"/>
  <id>http:/IDS2024S/announcement/1-assessing-your-programming-knowledge-and-interests</id>
  <published>2024-01-17T00:00:00-06:00</published>
  <updated>2024-01-17T00:00:00-06:00</updated>
  <author>
    <name>Amir Shahmoradi</name>
    <uri>http:/IDS2024S</uri>
    <email>shahmoradi@utexas.edu</email>
  </author>
  
  <content type="html">
  
    &lt;p&gt;The goal of this survey is to assess your prior programming experience and to identify the favorite programming language for this class, as well as the language that your advisor deems essential for your research. 
Ask Amir to send you a link to the survey if you have not already received it.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

  
  &lt;p&gt;&lt;a href=&quot;http:/IDS2024S/announcement/1-assessing-your-programming-knowledge-and-interests&quot;&gt;Announcement 1: Assessing your programming knowledge and interests&lt;/a&gt; was originally published by Amir Shahmoradi at &lt;a href=&quot;http:/IDS2024S&quot;&gt;DATA 1301 - Spring 2024 - MW 16:00-17:20 - PKH 103 / Microsoft Teams Virtual Room&lt;/a&gt; on January 17, 2024.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Announcement 0: Student-professor connection day]]></title>
  <link rel="alternate" type="text/html" href="http:/IDS2024S/announcement/0-student-professor-connection-day"/>
  <id>http:/IDS2024S/announcement/0-student-professor-connection-day</id>
  <published>2024-01-17T00:00:00-06:00</published>
  <updated>2024-01-17T00:00:00-06:00</updated>
  <author>
    <name>Amir Shahmoradi</name>
    <uri>http:/IDS2024S</uri>
    <email>shahmoradi@utexas.edu</email>
  </author>
  
  <content type="html">
  
    &lt;p&gt;On the first day of our class, we will try to get to know each other and I will attempt to describe my research work and educational background for you, as well as what we should expect from this course. Then I will present the results of the survey that I sent out to you a week ago to assess your programming knowledge, your favorite programming language, and the programming language that you would need for your research. Based on the survey results and your feedback in class, we will decide on the choice of language and the design of this course.&lt;/p&gt;

&lt;div class=&quot;post_toc&quot;&gt;&lt;/div&gt;

&lt;h2 id=&quot;about-me-amir-the-instructor&quot;&gt;About me, Amir, the instructor&lt;/h2&gt;

&lt;p&gt;I am a physicist and researcher, and currently a faculty member at &lt;a target=&quot;_blank&quot; href=&quot;https://www.uta.edu/physics/&quot;&gt;the Department of Physics&lt;/a&gt; as well as the Data Science Program in &lt;a target=&quot;_blank&quot; href=&quot;https://www.uta.edu/science/index.php&quot;&gt;The College of Science&lt;/a&gt; at &lt;a target=&quot;_blank&quot; href=&quot;https://www.uta.edu/&quot;&gt;The University of Texas at Arlington&lt;/a&gt;. You can find more information about me, our group, and our research at &lt;a target=&quot;_blank&quot; href=&quot;https://www.cdslab.org&quot;&gt;cdslab.org&lt;/a&gt;. Here is a summary of my life in a few pictures:&lt;/p&gt;

&lt;p&gt;I was introduced to the world of information and computer programming around 1991 by my father and elder brother. By the end of elementary school, I was so impressed with and knew enough about computer software to write a few simple &lt;a target=&quot;_blank&quot; href=&quot; https://en.wikipedia.org/wiki/PC_game&quot;&gt;computer games&lt;/a&gt; in &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/QBasic&quot;&gt;QBasic programming language&lt;/a&gt; on our first family personal computer, &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/IBM_386SLC&quot;&gt;IBM 386&lt;/a&gt;. Here is an example of how computer games looked liked 30 years ago.&lt;/p&gt;

&lt;div class=&quot;center&quot;&gt;
&lt;div class=&quot;video-wrapper&quot;&gt;
	&lt;div class=&quot;video-container&quot;&gt;
        &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/4TSF5sIgorA&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
		&lt;!-- &lt;iframe width=&quot;853&quot; height=&quot;480&quot; src=&quot;https://www.youtube.com/embed/0XL8RNxzrdw?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt; --&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;!-- include.path must be given relative to site.url, which is the project&apos;s root directory --&gt;

&lt;div style=&quot;display:block;text-align:center;margin-right:auto;margin-left:auto&quot;&gt;
    &lt;figure&gt;
        
        &lt;a href=&quot;https://cdslaborg.github.io/connection/memoriesOfGreen.jpg&quot; target=&quot;_blank&quot;&gt;
        
            &lt;img src=&quot;https://cdslaborg.github.io/connection/memoriesOfGreen.jpg&quot; width=&quot;100%&quot; /&gt;
        
        &lt;/a&gt;
        
        
            &lt;figcaption&gt;A portrait of me at high-school by my friends&lt;/figcaption&gt;
        
    &lt;/figure&gt;
&lt;/div&gt;

&lt;!-- include.path must be given relative to site.url, which is the project&apos;s root directory --&gt;

&lt;div style=&quot;display:block;text-align:center;margin-right:auto;margin-left:auto&quot;&gt;
    &lt;figure&gt;
        
        &lt;a href=&quot;https://cdslaborg.github.io/connection/EinsteinSandals.jpg&quot; target=&quot;_blank&quot;&gt;
        
            &lt;img src=&quot;https://cdslaborg.github.io/connection/EinsteinSandals.jpg&quot; width=&quot;100%&quot; /&gt;
        
        &lt;/a&gt;
        
        
            &lt;figcaption&gt;What I imagined I&apos;d do as a physicist&lt;/figcaption&gt;
        
    &lt;/figure&gt;
&lt;/div&gt;

&lt;!-- include.path must be given relative to site.url, which is the project&apos;s root directory --&gt;

&lt;div style=&quot;display:block;text-align:center;margin-right:auto;margin-left:auto&quot;&gt;
    &lt;figure&gt;
        
        &lt;a href=&quot;https://cdslaborg.github.io/connection/PhDdefense.gif&quot; target=&quot;_blank&quot;&gt;
        
            &lt;img src=&quot;https://cdslaborg.github.io/connection/PhDdefense.gif&quot; width=&quot;100%&quot; /&gt;
        
        &lt;/a&gt;
        
        
            &lt;figcaption&gt;A scene from my Ph.D. defense&lt;/figcaption&gt;
        
    &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;I never imagined a day I would use computer programming for scientific purposes. Nevertheless, there has been almost no single day that I have not used scientific programming for my work and research, ever since I entered graduate school.&lt;/p&gt;

&lt;h2 id=&quot;my-research-topics&quot;&gt;My research topics&lt;/h2&gt;

&lt;p&gt;The following are a few examples of what I do nowadays as part of my scientific research at UT Austin.&lt;/p&gt;

&lt;h3 id=&quot;theoretical-astrophysics&quot;&gt;Theoretical Astrophysics&lt;/h3&gt;

&lt;p&gt;While my current focus of research is mathematical modelling of tumor growth and Monte Carlo samplers, I am and have been working in multiple branches of science and engineering for several years, from the subatomic world of &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Elementary_particle&quot;&gt;elementary particles&lt;/a&gt;, to the microscopic world of &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Macromolecule&quot;&gt;biological macromolecules&lt;/a&gt;, to &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Gamma-ray_burst&quot;&gt;astrophysical phenomena&lt;/a&gt; occurring on the grandest scales of the &lt;a target=&quot;_blank&quot; href=&quot;https://en.wikipedia.org/wiki/Observable_universe&quot;&gt;observable Universe&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For several years of my research, I have been working on understanding Gamma-Ray Bursts (GRB) and their physics. Below is a movie of the moment a Short-duration GRB is generated from the merger of a binary Neutron star system.&lt;/p&gt;

&lt;div class=&quot;center&quot;&gt;
&lt;div class=&quot;video-wrapper&quot;&gt;
	&lt;div class=&quot;video-container&quot;&gt;
		&lt;iframe width=&quot;853&quot; height=&quot;480&quot; src=&quot;https://www.youtube.com/embed/P2ESs1rPO_A?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;https://cdslaborg.github.io/connection/astro_1.png&quot; width=&quot;100%&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;theoretical-biology-bioinformatics&quot;&gt;Theoretical Biology, Bioinformatics&lt;/h3&gt;

&lt;p&gt;I have also worked for a few years in the field of bioinformatics and evolutionary biology. The overarching goal in the field of protein bioinformatics and biophysics is to understand how proteins fold into their unique structure, and what determines the stability of the protein &lt;abbr title=&quot;3-Dimensional&quot;&gt;3D&lt;/abbr&gt; structure.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;https://cdslaborg.github.io/connection/bio_1.png&quot; width=&quot;100%&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;https://cdslaborg.github.io/connection/bio_2.png&quot; width=&quot;100%&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;One of the workhorses of this field, is therefore &lt;a href=&quot;https://en.wikipedia.org/wiki/Molecular_dynamics&quot; target=&quot;_blank&quot;&gt;molecular dynamic simulation&lt;/a&gt; to probe the dynamics of proteins and their interactions with other molecules. The following is a 1.5ns molecular dynamics simulation of Human Influenza H1 Hemagglutinin protein (&lt;a href=&quot;https://www.rcsb.org/pdb/explore.do?structureId=1rd8&quot; target=&quot;_blank&quot;&gt;1RD8&lt;/a&gt;, chains AB).&lt;/p&gt;

&lt;div class=&quot;center&quot;&gt;
&lt;div class=&quot;video-wrapper&quot;&gt;
	&lt;div class=&quot;video-container&quot;&gt;
		&lt;iframe width=&quot;853&quot; height=&quot;480&quot; src=&quot;https://www.youtube.com/embed/0XL8RNxzrdw?rel=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;petroleum-engineering&quot;&gt;Petroleum Engineering&lt;/h3&gt;

&lt;figure&gt;
	&lt;img src=&quot;https://cdslaborg.github.io/connection/petro_1.png&quot; width=&quot;100%&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;computational-oncology&quot;&gt;Computational Oncology&lt;/h3&gt;

&lt;p&gt;What you see in the figures below, is a representation of the growth of Glioblastoma tumor cells in a Rat’s brain over time.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;https://cdslaborg.github.io/connection/onco_1.png&quot; width=&quot;100%&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;https://cdslaborg.github.io/connection/onco_2.png&quot; width=&quot;100%&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;figure&gt;
	&lt;img src=&quot;https://cdslaborg.github.io/connection/onco_3.png&quot; width=&quot;100%&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;the-temporal-evolution-of-the-growth-of-glioma-tumor-in-rat&quot;&gt;The temporal evolution of the growth of Glioma tumor in rat&lt;/h4&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;https://cdslaborg.github.io/connection/tvccZSliceSubplotWithXYlabWithTB_rad_00gy_1_t10.0.png&quot; width=&quot;100%&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;https://cdslaborg.github.io/connection/GBGlastLong.gif&quot; width=&quot;100%&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;!--

&lt;figure&gt;
	&lt;img src=&quot;https://cdslaborg.github.io/connection/tvccZSliceSubplotWithXYlabWithTB_rad_00gy_2_t12.0.png&quot; width=&quot;100%&quot;&gt;
&lt;/figure&gt;&lt;br&gt;

---  
&lt;br&gt;

&lt;figure&gt;
	&lt;img src=&quot;https://cdslaborg.github.io/connection/tvccZSliceSubplotWithXYlabWithTB_rad_00gy_3_t14.0.png&quot; width=&quot;100%&quot;&gt;
&lt;/figure&gt;&lt;br&gt;

---  
&lt;br&gt;

&lt;figure&gt;
	&lt;img src=&quot;https://cdslaborg.github.io/connection/tvccZSliceSubplotWithXYlabWithTB_rad_00gy_5_t16.0.png&quot; width=&quot;100%&quot;&gt;
&lt;/figure&gt;&lt;br&gt;

---  
&lt;br&gt;

&lt;figure&gt;
	&lt;img src=&quot;https://cdslaborg.github.io/connection/tvccZSliceSubplotWithXYlabWithTB_rad_00gy_6_t18.0.png&quot; width=&quot;100%&quot;&gt;
&lt;/figure&gt;&lt;br&gt;

---  
&lt;br&gt;

&lt;figure&gt;
	&lt;img src=&quot;https://cdslaborg.github.io/connection/tvccZSliceSubplotWithXYlabWithTB_rad_00gy_7_t20.0.png&quot; width=&quot;100%&quot;&gt;
&lt;/figure&gt;&lt;br&gt;

--&gt;

&lt;h3 id=&quot;monte-carlo-simulation-and-integration-methods&quot;&gt;Monte Carlo Simulation and Integration Methods&lt;/h3&gt;

&lt;p&gt;One of the fields on which my research is currently focused, is developing Monte Carlo optimizer/sampler and integrator algorithms for Bayesian inverse problems.&lt;/p&gt;

&lt;h4 id=&quot;development-of-monte-carlo-sampling-algorithms&quot;&gt;Development of Monte Carlo sampling algorithms&lt;/h4&gt;

&lt;p&gt;Below you see example animations of two &lt;a href=&quot;https://en.wikipedia.org/wiki/Markov_chain_Monte_Carlo&quot; target=&quot;_blank&quot;&gt;Markov Chain Monte Carlo&lt;/a&gt; (MCMC) samplers, both of which sample a double Gaussian-peak function, but with different MCMC sampling parameters.&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;https://cdslaborg.github.io/connection/PDF_RS_H_Forever20ms.gif&quot; width=&quot;100%&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;Example of highly-efficiency, but bad-mixing MCMC sampler.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;https://cdslaborg.github.io/connection/PDF_RS_L_Forever20ms.gif&quot; width=&quot;100%&quot; /&gt;
    &lt;figcaption style=&quot;text-align:center&quot;&gt;Example of low-efficiency, but good-mixing MCMC sampler.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;development-of-monte-carlo-integration-algorithms&quot;&gt;Development of Monte Carlo integration algorithms&lt;/h4&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;https://cdslaborg.github.io/connection/DRI.png&quot; width=&quot;100%&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;https://cdslaborg.github.io/connection/DLI.png&quot; width=&quot;100%&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;https://cdslaborg.github.io/connection/GR3D.png&quot; width=&quot;100%&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;https://cdslaborg.github.io/connection/GR2D.png&quot; width=&quot;100%&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;https://cdslaborg.github.io/connection/GR2D.gif&quot; width=&quot;100%&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;https://cdslaborg.github.io/connection/EB3D.png&quot; width=&quot;100%&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;figure&gt;
	&lt;img src=&quot;https://cdslaborg.github.io/connection/EB2D.gif&quot; width=&quot;100%&quot; /&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h4 id=&quot;biomedical-data-science&quot;&gt;Biomedical Data Science&lt;/h4&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;!-- include.path must be given relative to site.url, which is the project&apos;s root directory --&gt;

&lt;div style=&quot;display:block;text-align:center;margin-right:auto;margin-left:auto&quot;&gt;
    &lt;figure&gt;
        
        &lt;a href=&quot;https://cdslaborg.github.io/connection/PT509_ST9501_SE00144_ADC0016.png&quot; target=&quot;_blank&quot;&gt;
        
            &lt;img src=&quot;https://cdslaborg.github.io/connection/PT509_ST9501_SE00144_ADC0016.png&quot; width=&quot;100%&quot; /&gt;
        
        &lt;/a&gt;
        
        
    &lt;/figure&gt;
&lt;/div&gt;

&lt;!-- include.path must be given relative to site.url, which is the project&apos;s root directory --&gt;

&lt;div style=&quot;display:block;text-align:center;margin-right:auto;margin-left:auto&quot;&gt;
    &lt;figure&gt;
        
        &lt;a href=&quot;https://cdslaborg.github.io/connection/PT509_ST9501_SE00144_ADC0016_overlay.png&quot; target=&quot;_blank&quot;&gt;
        
            &lt;img src=&quot;https://cdslaborg.github.io/connection/PT509_ST9501_SE00144_ADC0016_overlay.png&quot; width=&quot;100%&quot; /&gt;
        
        &lt;/a&gt;
        
        
    &lt;/figure&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;


  
  &lt;p&gt;&lt;a href=&quot;http:/IDS2024S/announcement/0-student-professor-connection-day&quot;&gt;Announcement 0: Student-professor connection day&lt;/a&gt; was originally published by Amir Shahmoradi at &lt;a href=&quot;http:/IDS2024S&quot;&gt;DATA 1301 - Spring 2024 - MW 16:00-17:20 - PKH 103 / Microsoft Teams Virtual Room&lt;/a&gt; on January 17, 2024.&lt;/p&gt;</content>
</entry>

</feed>
